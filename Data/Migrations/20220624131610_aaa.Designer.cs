// <auto-generated />
using Data.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(AuthDbContext))]
    [Migration("20220624131610_aaa")]
    partial class aaa
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Data.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(true);

                    b.HasKey("Id");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nickname = "Person1"
                        },
                        new
                        {
                            Id = 2,
                            Nickname = "Person2"
                        },
                        new
                        {
                            Id = 3,
                            Nickname = "Person3"
                        });
                });

            modelBuilder.Entity("Data.Entities.PersonAuth", b =>
                {
                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("Role")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(2);

                    b.HasKey("PersonId")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.ToTable("PeopleAuths");

                    b.HasData(
                        new
                        {
                            PersonId = 1,
                            Email = "mail10@gmail.com",
                            Password = "pass1",
                            Role = 2
                        },
                        new
                        {
                            PersonId = 2,
                            Email = "mail12@gmail.com",
                            Password = "pass2",
                            Role = 2
                        },
                        new
                        {
                            PersonId = 3,
                            Email = "mail13@gmail.com",
                            Password = "pass3",
                            Role = 1
                        });
                });

            modelBuilder.Entity("Data.Entities.PersonAuth", b =>
                {
                    b.HasOne("Data.Entities.Person", "Person")
                        .WithOne("PersonAuth")
                        .HasForeignKey("Data.Entities.PersonAuth", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
